name: release
on:
  push:
    branches:
      - main
env:
  ACTION_NAME: auto-merge-action

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          npm ci
      - run: |
          npm run build
          npm run test
      - name: commit
        run: |-
          set -e
          # get current commit hash
          CURRENT_HASH=$(git rev-parse HEAD)
          # get last commit hash of last build dist
          LAST_BUILD_HASH=$(git log --author=kenhowardpdx[bot] -1 --pretty=format:"%H")
          DIFF=""
          # build and commit dist if diff
          git config --global user.name "kenhowardpdx[bot]"
          git config user.email 'bot@github.kenhoward.dev'
          git add dist/
          git diff-index --quiet HEAD || git commit -m "chore: build dist ${ACTION_NAME}"
          # if last commit hash of last build dist was found, get logs of commits in btw for PR body
          if [ -z "$LAST_BUILD_HASH" ]
          then
                echo "Unable to find last commit by bot, skipping diff gen"
          else
                DIFF=$(git log ${LAST_BUILD_HASH}...${CURRENT_HASH} --oneline)
                echo $DIFF
          fi
          # set env vars
          echo "CURRENT_HASH=${CURRENT_HASH}" >> $GITHUB_ENV
          echo "LAST_BUILD_HASH=${LAST_BUILD_HASH}" >> $GITHUB_ENV
          echo 'DIFF<<EOF' >> $GITHUB_ENV
          echo "${DIFF}" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Create PR with dist
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Build dist
          author: "kenhowardpdx[bot] <bot@github.kenhoward.dev>"
          title: "chore: build dist"
          body: |
            Build dist PR
            ${{env.DIFF}}
          labels: automated pr
          branch: create-pull-request/build-dist
            #delete-branch: true
          push-to-fork: kenhowardbot/${{env.ACTION_NAME}}
  auto-merge-action-release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: ${{env.ACTION_NAME}}
          command: github-release
      - uses: actions/checkout@v3
      - name: tag major and patch versions
        run: |
          git config user.name kenhowardpdx[bot]
          git config user.email 105736529+kenhowardbot@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/kenhowardpdx/${ACTION_NAME}.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
        if: ${{ steps.release.outputs.release_created }}
  release-please-pr:
    runs-on: ubuntu-latest
    needs:
      - build
      - auto-merge-action-release
    steps:
      - id: release-pr
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.AUTO_MERGE_TOKEN }}
          release-type: node
          fork: true
          package-name: ${{env.ACTION_NAME}}
          command: release-pr
      - id: label
        if: ${{ steps.release-pr.outputs.pr }}
        uses: actions/github-script@v3
        with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
              await github.issues.addLabels({
                owner,
                repo,
                issue_number: ${{steps.release-pr.outputs.pr}},
                labels: ['autorelease: pending']
              });
              console.log(`Tagged ${{steps.release-pr.outputs.pr}}`)
